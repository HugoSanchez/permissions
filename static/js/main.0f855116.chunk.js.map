{"version":3,"sources":["TokenSelector.js","PMDisplay.js","App.js","rootReducer.js","combineReducers.js","serviceWorker.js","index.js"],"names":["Text","Typography","Title","Option","Select","TokenSelector","tokenSelectOpts","onChange","Fragment","level","style","paddingTop","paddingBottom","width","autoFocus","showSearch","marginBottom","placeholder","optionFilterProp","index","filterOption","input","option","props","children","toLowerCase","indexOf","map","label","value","key","Column","Table","PMDisplay","enabled","delegates","removeDelegate","delegate","address","checked","dataSource","rowKey","title","dataIndex","render","text","record","onClick","type","theme","Content","Layout","Header","PERMISSIONS_FEATURE","ROLE","networkConfigs","1","polymathRegistryAddress","42","15","Network","networkId","marginRight","marginLeft","0","User","walletAddress","App","useContext","Store","state","dispatch","AppReducer","sdk","loading","loadingMessage","error","tokens","tokenIndex","pmEnabled","token","useEffect","a","browserUtils","getNetworkId","getCurrentAddress","includes","config","Polymath","connect","message","init","getSecurityTokens","length","fetchTokens","features","isEnabled","feature","undefined","checkPMStatus","permissions","getDelegatesForRole","role","console","log","fetchDelegates","togglePM","enable","queue","run","result","disable","revokeRole","delegateAddress","res","i","symbol","spinning","tip","size","backgroundColor","display","flexDirection","justifyContent","alignItems","padding","closable","showIcon","rootReducer","reducers","action","hasChanged","nextState","Object","keys","reduce","combineReducers","Error","Boolean","window","location","hostname","match","initialState","createContext","ReactDOM","store","useReducer","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0f855116.chunk.js","sourcesContent":["import React from 'react'\nimport { Select, Typography } from 'antd'\n\nconst { Text, Title } = Typography\nconst { Option } = Select\n\nexport default function TokenSelector({tokenSelectOpts, onChange}) {\n  return (\n    <React.Fragment>\n      <Title level={3}>Please Select a Token</Title>\n      <Text style={{\n        paddingTop: 20,\n        paddingBottom: 20,\n        width: '100%'\n      }}>\n        Once you select a token, you will be able to manage token holders white-list by adding,\n        editing or removing token holders.\n      </Text>\n      <Select\n        autoFocus\n        showSearch\n        style={{\n          width: '100%',\n          marginBottom: 40\n        }}\n        placeholder=\"Select a token\"\n        optionFilterProp=\"children\"\n        onChange={(index) => onChange(index)}\n        filterOption={(input, option) =>\n          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n      >\n        {tokenSelectOpts.map(({label, value}) =>\n          <Option key={value} value={value}>{label}</Option>)}\n      </Select>\n    </React.Fragment>\n  )\n}","import React, {Fragment} from 'react'\nimport { Switch, Table, Typography, Button, Icon } from 'antd'\n\nconst {Column} = Table\nconst {Text} = Typography\n\nexport default function PMDisplay({enabled, onChange, delegates, removeDelegate}) {\n  delegates = delegates.map(delegate => ({\n    key: delegate,\n    address: delegate\n  }))\n  return (\n    <Fragment>\n      <Switch checked={enabled} onChange={onChange} />\n      <Table dataSource={delegates} rowKey=\"address\">\n        <Column\n          title='Address'\n          dataIndex='address'\n          key='address'\n          render={(text) => <Text>{text}</Text>}\n        />\n        <Column render={(text, record) => {\n          return (\n            <Fragment>\n              <Button onClick={() => removeDelegate(record.address)}>\n                <Icon type=\"delete\" theme=\"filled\" />\n              </Button>\n            </Fragment>\n          )\n        }}/>\n      </Table>\n    </Fragment>\n  )\n}","import React, { useContext, useEffect, Fragment } from 'react'\nimport { Store } from './index'\nimport { Polymath, browserUtils } from '@polymathnetwork/sdk'\nimport { Layout, Spin, Icon, Typography, Alert } from 'antd'\nimport TokenSelector from './TokenSelector'\nimport PMDisplay from './PMDisplay'\n\nconst { Content, Header } = Layout\nconst { Text } = Typography\n\nconst PERMISSIONS_FEATURE = 'Permissions'\nconst ROLE = 'ShareholdersAdministrator'\n\nconst networkConfigs = {\n  1: {\n    polymathRegistryAddress: '0xdfabf3e4793cd30affb47ab6fa4cf4eef26bbc27'\n  },\n  42: {\n    polymathRegistryAddress: '0x5b215a7d39ee305ad28da29bf2f0425c6c2a00b3'\n  },\n  15: {\n    polymathRegistryAddress: '0x9FBDa871d559710256a2502A2517b794B482Db40'\n  }\n}\n\nexport const reducer = (state, action) => {\n  console.log('ACTION', action)\n  switch (action.type) {\n  case 'INITALIZING':\n    return {\n      ...state,\n      loading: true,\n      loadingMessage: 'Initializing Polymath SDK',\n      error: undefined,\n    }\n  case 'INITIALIZED':\n    const { sdk, networkId, walletAddress } = action\n    return {\n      ...state,\n      loading: false,\n      loadingMessage: '',\n      error: undefined,\n      sdk,\n      networkId,\n      walletAddress\n    }\n  case 'ERROR':\n    const { error } = action\n    return {\n      ...state,\n      loading: false,\n      loadingMessage: '',\n      error,\n    }\n  case 'FETCHING_TOKENS':\n    return {\n      ...state,\n      loading: true,\n      loadingMessage: 'Fetching tokens'\n    }\n  case 'TOKEN_SELECTED':\n    const { tokenIndex } = action\n    return {\n      ...state,\n      tokenIndex,\n      pmEnabled: undefined\n    }\n  case 'FETCHING_PM_STATUS':\n    return {\n      ...state,\n      loading: true,\n      loadingMessage: 'Fetching permissions feature status'\n    }\n  case 'FETCHING_DELEGATES':\n    return {\n      ...state,\n      loading: true,\n      loadingMessage: 'Fetching delegates'\n    }\n  case 'REMOVING_DELEGATE':\n    const { address } = action\n    return {\n      ...state,\n      address,\n      loading: true,\n      loadingMessage: `Revoking roles of ${address}`\n    }\n  case 'FETCHED_TOKENS':\n  case 'FETCHED_PM_STATUS':\n  case 'TOGGLED_PM':\n  case 'FETCHED_DELEGATES':\n  case 'REMOVED_DELEGATE':\n    const { type, ...payload } = action\n    return {\n      ...state,\n      ...payload,\n      loading: false,\n      loadingMessage: ''\n    }\n  case 'TOGGLING_PM':\n    return {\n      ...state,\n      loading: true,\n      loadingMessage: 'Toggling permission management'\n    }\n  default:\n    throw new Error(`Unrecognized action type: ${action.type}`)\n  }\n}\n\nfunction Network({networkId}) {\n  const networks = {\n    0: 'Disconnected',\n    1: 'Mainnet',\n    42: 'Kovan'\n  }\n  return (\n    <Fragment>\n      <Icon type=\"global\" style={{\n        marginRight: 10,\n        marginLeft: 20\n      }} />\n      <Text>{networks[networkId]}</Text>\n    </Fragment>\n  )\n}\n\nfunction User({walletAddress}) {\n  if (walletAddress)\n    return (\n      <Fragment>\n        <Icon type=\"user\" style={{\n          marginRight: 5,\n          marginLeft: 10\n        }}/>\n        <Text>{walletAddress}</Text>\n      </Fragment>\n    )\n  return null\n}\n\nfunction App() {\n  const [state, dispatch] = useContext(Store)\n  const { sdk, loading, loadingMessage, walletAddress, error, networkId, tokens, tokenIndex, pmEnabled, delegates } = state.AppReducer\n  const token = tokens[tokenIndex]\n\n  // Initialize the SDK.\n  useEffect(() => {\n    async function init() {\n      dispatch({type: 'INITALIZING'})\n\n      try {\n        const networkId = await browserUtils.getNetworkId()\n        const walletAddress = await browserUtils.getCurrentAddress()\n        if (![-1, 1, 42].includes(networkId)) {\n          dispatch({\n            type: 'ERROR',\n            error: 'Please switch to either Main or Kovan network'\n          })\n          return\n        }\n\n        const config = networkConfigs[networkId]\n        const sdk = new Polymath()\n        await sdk.connect(config)\n        dispatch({\n          type: 'INITIALIZED',\n          networkId,\n          sdk,\n          walletAddress,\n        })\n      }\n      catch(error) {\n        dispatch({\n          type: 'ERROR',\n          error: error.message\n        })\n      }\n    }\n    if (!sdk) {\n      init()\n    }\n  }, [dispatch, sdk])\n\n  // b. Fetch tokens\n  useEffect(() => {\n    async function fetchTokens(dispatch, sdk, walletAddress) {\n      dispatch({type: 'FETCHING_TOKENS'})\n      const tokens = await sdk.getSecurityTokens({ walletAddress })\n\n      dispatch({type: 'FETCHED_TOKENS', tokens})\n    }\n    if (sdk && walletAddress && tokens.length === 0) {\n      fetchTokens(dispatch, sdk, walletAddress)\n    }\n  }, [walletAddress, sdk, dispatch, tokens])\n\n  // c. Check if permissions are enabled\n  useEffect(() => {\n    async function checkPMStatus() {\n      dispatch({type: 'FETCHING_PM_STATUS'})\n      const enabled = await token.features.isEnabled({feature: PERMISSIONS_FEATURE})\n      dispatch({type: 'FETCHED_PM_STATUS', pmEnabled: enabled})\n    }\n    if (token && pmEnabled === undefined) {\n      checkPMStatus()\n    }\n  }, [dispatch, pmEnabled, token])\n\n  // d. load delegates\n  useEffect(() => {\n    async function fetchDelegates() {\n      dispatch({type: 'FETCHING_DELEGATES'})\n      const delegates = await token.permissions.getDelegatesForRole({role: ROLE})\n      console.log('delegates', delegates)\n      dispatch({type: 'FETCHED_DELEGATES', delegates})\n    }\n    if (pmEnabled) {\n      fetchDelegates()\n    }\n  }, [tokens, pmEnabled, dispatch, token])\n\n\n\n  const selectToken = (tokenIndex) => {\n    dispatch({type: 'TOKEN_SELECTED', tokenIndex})\n  }\n\n  const togglePM = async (enable) => {\n    dispatch({type: 'TOGGLING_PM'})\n    if (enable) {\n      // Enable module\n      const queue = await token.features.enable(PERMISSIONS_FEATURE)\n      const result = await queue.run()\n      console.log(result)\n    } else {\n      // @FIXME. features.disable() isn't implemented yet.\n      // Disable module\n      const queue = await token.features.disable(PERMISSIONS_FEATURE)\n      const result = await queue.run()\n      console.log(result)\n    }\n    dispatch({type: 'TOGGLED_PM', pmEnabled: !enable})\n  }\n\n  const removeDelegate = async (address) => {\n    dispatch({type: 'REMOVING_DELEGATE', address})\n    const queue = await token.permissions.revokeRole({ delegateAddress: address, role: ROLE })\n    console.log(queue)\n    // @FIXME an exception occurs here.\n    const res = await queue.run()\n    console.log('res', res)\n    dispatch({type: 'REMOVED_DELEGATE'})\n  }\n\n  const tokenSelectOpts = tokens.map((token, i) => ({label: token.symbol, value: i}))\n\n  return (\n    <div>\n      <Spin spinning={loading} tip={loadingMessage} size=\"large\">\n        <Layout>\n          <Header style={{\n            backgroundColor: 'white',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            alignItems: 'center'\n          }}>\n            <Network networkId={networkId} />\n            <User walletAddress={walletAddress} />\n          </Header>\n          <Content style={{\n            padding: 50,\n            backgroundColor: '#FAFDFF'\n          }}>\n            {error && <Alert\n              message={error}\n              type=\"error\"\n              closable\n              showIcon\n            />}\n            { walletAddress &&\n              <div style={{\n                display: 'flex',\n                flexDirection: 'column',\n                width: 250,\n                justifyContent: 'flex-start'\n              }}>\n                <TokenSelector tokenSelectOpts={tokenSelectOpts} onChange={selectToken} />\n              </div>\n            }\n            { token && <React.Fragment>\n              <PMDisplay enabled={pmEnabled} onChange={togglePM} delegates={delegates} removeDelegate={removeDelegate}/>\n            </React.Fragment>}\n          </Content>\n        </Layout>\n      </Spin>\n    </div>\n  )\n}\n\nexport default App\n","import combineReducers from './combineReducers'\nimport { reducer as AppReducer } from './App'\nconst rootReducer = combineReducers({AppReducer})\n\nexport default rootReducer","/**\n * @see https://codesandbox.io/s/rm7587n34m?from-embed\n *\n * A size-optimized refactor of Redux's combineReducers.\n * All safeguards removed. Use at your own risk.\n * https://github.com/reduxjs/redux/blob/master/src/combineReducers.js\n */\n\nconst combineReducers = reducers => (state, action) => {\n  let hasChanged\n  const nextState = Object.keys(reducers).reduce((result, key) => {\n    result[key] = reducers[key](state[key], action)\n    hasChanged = hasChanged || result[key] !== state[key]\n    return result\n  }, {})\n  return hasChanged ? nextState : state\n}\n\nexport default combineReducers\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {createContext, useReducer} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport rootReducer from './rootReducer'\nimport * as serviceWorker from './serviceWorker'\n\nconst initialState = {\n  AppReducer: {\n    sdk: undefined,\n    loading: false,\n    loadingMessage: '',\n    error: undefined,\n    networkId: -1,\n    walletAddress: '',\n    tokens: [],\n    tokenIndex: undefined,\n    pmEnabled: undefined,\n    delegates: []\n  }\n}\n\nexport const Store = createContext()\nconst WrappedApp = () => {\n  const store = useReducer(rootReducer, initialState)\n  return (<Store.Provider value={store}><App /></Store.Provider>)\n}\n\nReactDOM.render(<WrappedApp />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}