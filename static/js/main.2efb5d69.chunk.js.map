{"version":3,"sources":["PMDisplay.js","App.js","rootReducer.js","combineReducers.js","serviceWorker.js","index.js"],"names":["Column","Table","Text","Typography","Item","Form","Option","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","rolesMap","PMDisplay","records","revokeRole","assignRole","roles","map","address","key","role","useForm","getFieldDecorator","validateFields","resetFields","useState","formVisible","setFormVisible","rolesOpts","value","label","handleSubmit","a","force","then","values","console","log","error","style","display","flexDirection","type","onClick","alignSelf","marginBottom","zIndex","title","okText","closable","visible","footer","name","rules","required","validator","rule","callback","web3Utils","isAddress","size","dataSource","rowKey","dataIndex","render","text","_split","record","theme","Content","Layout","Header","Sider","PERMISSIONS_FEATURE","Features","features","pmEnabled","column","status","Object","keys","feat","asyncAction","dispatch","func","msg","rets","message","App","useContext","Store","state","usePolymathSdk","sdkError","sdk","networkId","walletAddress","useTokenSelector","tokenSelectorError","tokenSelector","tokens","tokenIndex","AppReducer","loading","loadingMessage","availableRoles","token","enable","feature","queue","run","disable","length","useEffect","getStatus","featuresStatus","permissions","getAvailableRoles","getFeaturesStatus","getAllDelegates","delegates","reduce","acc","delegate","i","concat","delegateAddress","getDelegates","spinning","tip","backgroundColor","justifyContent","alignItems","width","padding","showIcon","orientation","Fragment","rootReducer","reducers","action","hasChanged","nextState","result","combineReducers","undefined","Error","Boolean","window","location","hostname","match","initialState","createContext","string","split","join","ReactDOM","store","useReducer","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2efb5d69.chunk.js","sourcesContent":["import React, {Fragment, useState} from 'react'\nimport { Table, Typography, Button, Icon, Form, Input, Modal, Select } from 'antd'\nimport useForm from 'rc-form-hooks'\nimport { _split } from './index'\nimport { utils as web3Utils } from 'web3'\n\nconst { Column } = Table\nconst { Text } = Typography\nconst { Item } = Form\nconst { Option } = Select\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n}\nconst rolesMap = {\n  'StoOperator': 'STO Operator',\n  'StoAdministrator': 'STO Administrator',\n  'Erc20DividendsAdministrator': 'ERC20 Dividends Administrator',\n  'Erc20DividendsOperator': 'ERC20 Dividends Operator',\n  'PermissionsOperator': 'Permissions Operator',\n  'ShareholdersOperator': 'Shareholders Operator',\n  'PermissionsAdministrator': 'Permissions Administrator',\n  'ShareholdersAdministrator' : 'Shareholders Administrator'\n}\n\nexport default function PMDisplay({\n  records,\n  revokeRole,\n  assignRole,\n  roles\n}) {\n  records = records.map(({address, role}) => ({\n    key: address,\n    address: address,\n    role\n  }))\n  const { getFieldDecorator, validateFields, resetFields } = useForm()\n  const [formVisible, setFormVisible] = useState(false)\n\n  const rolesOpts = roles.map(role => ({\n    value: role,\n    label: rolesMap[role]\n  }))\n  const handleSubmit = async () => {\n    const fields = ['address', 'role']\n    validateFields(fields, { force: true })\n      .then(async (values) => {\n        console.log(values)\n\n        try {\n          await assignRole(values.address, values.role)\n          resetFields()\n        }\n        catch (error) {\n          console.error(error)\n        }\n        // Close form\n        setFormVisible(false)\n      })\n  }\n\n  return (\n    <div style={{display: 'flex', flexDirection: 'column'}}>\n      <Button\n        type=\"primary\"\n        onClick={() => setFormVisible(true)}\n        style={{alignSelf: 'flex-end', marginBottom: 20}}>Assign a role</Button>\n      <Modal\n        zIndex={0}\n        title={'Assign a role'}\n        okText=\"Save\"\n        closable={false}\n        visible={formVisible}\n        footer={null}\n      >\n        <Form {...formItemLayout}>\n          <Item name=\"address\" label=\"Address\">\n            {getFieldDecorator('address', {\n              rules: [\n                { required: true  },\n                {\n                  validator: (rule, value, callback) => {\n                    if (!web3Utils.isAddress(value)) {\n                      callback('Address is invalid')\n                      return\n                    }\n                    callback()\n                    return\n                  }\n                }\n              ],\n            })(<Input />)}\n          </Item>\n          <Item name=\"role\" label=\"Role\">\n            {getFieldDecorator('role', {rules: [\n              { required: true  }\n            ]})(<Select>\n              {rolesOpts.map(({value, label}) =>\n                <Option key={label} value={value}>{label}</Option>)}\n            </Select>)}\n          </Item>\n          <Item name=\"details\" label=\"Details\">\n            {getFieldDecorator('details')(<Input />)}\n          </Item>\n          <Item>\n            <Button onClick={() => setFormVisible(false)}>Cancel</Button>\n            <Button type=\"primary\" onClick={handleSubmit}>Save</Button>\n          </Item>\n        </Form>\n      </Modal>\n      <Table style={{zIndex: 0}} size=\"middle\" dataSource={records} rowKey={(address, role) => `${address}-${role}`}>\n        <Column\n          title='Address'\n          dataIndex='address'\n          key='address'\n          render={(text) => <Text>{text}</Text>}\n        />\n        <Column\n          title='Role'\n          dataIndex='role'\n          key='role'\n          render={(role) => <Text>{_split(role)}</Text>}\n        />\n        <Column\n          title='Actions'\n          render={(text, record) => {\n            return (\n              <Fragment>\n                <Button onClick={() => revokeRole(record.address, record.role)}>\n                  <Icon type=\"delete\" theme=\"filled\" />\n                </Button>\n              </Fragment>\n            )\n          }}/>\n      </Table>\n    </div>\n  )\n}","import React, { useContext, useEffect, Fragment } from 'react'\nimport { usePolymathSdk, useTokenSelector, User, Network} from '@polymathnetwork/react'\n\nimport { Store } from './index'\nimport { Layout, Spin, Alert, Button, Descriptions, Badge, Divider } from 'antd'\nimport PMDisplay from './PMDisplay'\nimport { _split } from './index'\n\nconst { Content, Header, Sider } = Layout\n\nconst PERMISSIONS_FEATURE = 'Permissions'\n\nexport const reducer = (state, action) => {\n  console.log('ACTION', action)\n  switch (action.type) {\n  case 'ASYNC_START':\n    return {\n      ...state,\n      loading: true,\n      loadingMessage: action.msg,\n      error: undefined,\n    }\n  case 'ASYNC_COMPLETE':\n    const { type, ...payload } = action\n    return {\n      ...state,\n      ...payload,\n      loading: false,\n      loadingMessage: '',\n      error: undefined\n    }\n  case 'ERROR':\n  case 'ASYNC_ERROR':\n    const { error } = action\n    return {\n      ...state,\n      loading: false,\n      loadingMessage: '',\n      error,\n    }\n  case 'TOKEN_SELECTED':\n    const { tokenIndex } = action\n    return {\n      ...state,\n      tokenIndex,\n      delegates: undefined,\n      records: undefined,\n      pmEnabled: undefined,\n      error: undefined,\n      features: undefined,\n    }\n  default:\n    throw new Error(`Unrecognized action type: ${action.type}`)\n  }\n}\n\nfunction Features({features, pmEnabled, onClick}) {\n  return (\n    <Descriptions column={4} style={{marginBottom: 50}}>\n      <Descriptions.Item key='Permissions' label='Permissions'>\n        { pmEnabled\n          ? <Badge status='success' text='enabled' />\n          : <Button type=\"primary\" onClick={onClick}>Enable</Button> }\n      </Descriptions.Item>\n      }\n      {Object.keys(features).map(feat => {\n        return (<Descriptions.Item key={feat} label={_split(feat)}>\n          <Badge status={features[feat] ? 'success' : 'error'} text={features[feat] ? 'enabled' : 'disabled'} />\n        </Descriptions.Item>\n        )}\n      )}\n    </Descriptions> )\n}\n\nasync function asyncAction(dispatch, func, msg = '') {\n  try {\n    dispatch({type: 'ASYNC_START', msg})\n    const rets = await func()\n    dispatch({type: 'ASYNC_COMPLETE', ...rets})\n  }\n  catch (error) {\n    dispatch({type: 'ASYNC_ERROR', error: error.message})\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useContext(Store)\n  let {error: sdkError, sdk, networkId, walletAddress} = usePolymathSdk()\n  let {error: tokenSelectorError, tokenSelector, tokens, tokenIndex} = useTokenSelector(sdk, walletAddress)\n\n  let {\n    loading,\n    loadingMessage,\n    error,\n    pmEnabled,\n    records,\n    features,\n    availableRoles\n  } = state.AppReducer\n  const token = tokens[tokenIndex]\n\n  error = error || sdkError || tokenSelectorError\n  if (!error && !loadingMessage) {\n    if (!sdk) {\n      loading = true\n      loadingMessage = 'Initializing Polymath SDK'\n    }\n    else if (!tokens.length) {\n      loading = true\n      loadingMessage = 'Loading your security tokens'\n    }\n  }\n\n  // Load features status / available roles\n  useEffect(() => {\n    async function getFeaturesStatus() {\n      const featuresStatus = await token.features.getStatus()\n      let availableRoles = []\n      const pmEnabled = featuresStatus[PERMISSIONS_FEATURE]\n      delete featuresStatus[PERMISSIONS_FEATURE]\n      if (pmEnabled) {\n        availableRoles = await token.permissions.getAvailableRoles()\n      }\n      return {\n        availableRoles, features: featuresStatus, pmEnabled\n      }\n    }\n    if (token && !features) {\n      asyncAction(dispatch, () => getFeaturesStatus(), 'Loading features status')\n    }\n  }, [dispatch, features, token])\n\n  // Load delegates\n  useEffect(() => {\n    async function getDelegates() {\n      const delegates = await token.permissions.getAllDelegates()\n      const records = delegates.reduce((acc, delegate, i) => {\n        return acc.concat(delegate.roles.map(role => ({\n          address: delegates[i].delegateAddress,\n          role\n        })))\n      }, [])\n      return {\n        delegates,\n        records\n      }\n    }\n    if (token && pmEnabled) {\n      asyncAction(dispatch, () => getDelegates(), 'Loading delegates')\n    }\n  }, [pmEnabled, dispatch, token])\n\n  async function togglePM(enable) {\n    try {\n      dispatch({type: 'ASYNC_START', msg: 'Toggle role management'})\n      if (enable) {\n        // Enable module\n        const queue = await token.features.enable({feature: PERMISSIONS_FEATURE})\n        await queue.run()\n      } else {\n        // Disable module\n        const queue = await token.features.disable({feature: PERMISSIONS_FEATURE})\n        await queue.run()\n      }\n      dispatch({type: 'ASYNC_COMPLETE', pmEnabled: !enable})\n      dispatch({type: 'TOKEN_SELECTED', tokenIndex})\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: 'ASYNC_ERROR',\n        error: error.message\n      })\n    }\n  }\n\n  const revokeRole = async (address, role) => {\n    try {\n      dispatch({type: 'ASYNC_START', msg: `Revoking ${role} role from ${address}`})\n      const queue = await token.permissions.revokeRole({ delegateAddress: address, role })\n      await queue.run()\n      dispatch({type: 'ASYNC_COMPLETE'})\n      dispatch({type: 'TOKEN_SELECTED', tokenIndex})\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: 'ASYNC_ERROR',\n        error: error.message\n      })\n    }\n  }\n\n  const assignRole = async (address, role) => {\n    try {\n      dispatch({type: 'ASYNC_START', msg: `Assigning ${role} role to ${address}`})\n      const queue = await token.permissions.assignRole({ delegateAddress: address, role })\n      await queue.run()\n      dispatch({type: 'ASYNC_COMPLETE'})\n      dispatch({type: 'TOKEN_SELECTED', tokenIndex})\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: 'ASYNC_ERROR',\n        error: error.message\n      })\n    }\n  }\n\n  return (\n    <div>\n      <Spin spinning={loading} tip={loadingMessage} size=\"large\">\n        <Layout>\n          <Header style={{\n            backgroundColor: 'white',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            alignItems: 'center'\n          }}>\n            <Network networkId={networkId} />\n            <User walletAddress={walletAddress} />\n          </Header>\n          <Layout>\n            <Sider width={350}\n              style={{\n                padding: 50,\n                backgroundColor: '#FAFDFF'\n              }}\n            >\n              { walletAddress && tokens &&\n                <div style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  width: 250,\n                  justifyContent: 'flex-start'\n                }}>\n                  {tokenSelector}\n                </div>\n              }\n            </Sider>\n            <Content style={{\n              padding: 50,\n              backgroundColor: '#FAFDFF'\n            }}>\n              {error && <Alert\n                message={error}\n                type=\"error\"\n                closable\n                showIcon\n              />}\n              { token && features &&\n                <Fragment>\n                  <Divider orientation=\"left\">Token features</Divider>\n                  <Features features={features} pmEnabled={pmEnabled} onClick={togglePM} />\n                </Fragment> }\n              { token && availableRoles && records && <React.Fragment>\n                <Divider orientation=\"left\">Delegates (administrators and operators)</Divider>\n\n                <PMDisplay\n                  records={records}\n                  roles={availableRoles}\n                  revokeRole={revokeRole}\n                  assignRole={assignRole}/>\n              </React.Fragment> }\n            </Content>\n          </Layout>\n        </Layout>\n      </Spin>\n    </div>\n  )\n}\n\nexport default App\n","import combineReducers from './combineReducers'\nimport { reducer as AppReducer } from './App'\nconst rootReducer = combineReducers({AppReducer})\n\nexport default rootReducer","/**\n * @see https://codesandbox.io/s/rm7587n34m?from-embed\n *\n * A size-optimized refactor of Redux's combineReducers.\n * All safeguards removed. Use at your own risk.\n * https://github.com/reduxjs/redux/blob/master/src/combineReducers.js\n */\n\nconst combineReducers = reducers => (state, action) => {\n  let hasChanged\n  const nextState = Object.keys(reducers).reduce((result, key) => {\n    result[key] = reducers[key](state[key], action)\n    hasChanged = hasChanged || result[key] !== state[key]\n    return result\n  }, {})\n  return hasChanged ? nextState : state\n}\n\nexport default combineReducers\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {createContext, useReducer} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport rootReducer from './rootReducer'\nimport * as serviceWorker from './serviceWorker'\n\nconst initialState = {\n  AppReducer: {\n    sdk: undefined,\n    loading: false,\n    loadingMessage: '',\n    error: undefined,\n    networkId: -1,\n    walletAddress: '',\n    tokens: [],\n    tokenIndex: undefined,\n    pmEnabled: undefined,\n    delegates: undefined,\n    features: undefined\n  }\n}\n\nexport const Store = createContext()\nconst WrappedApp = () => {\n  const store = useReducer(rootReducer, initialState)\n  return (<Store.Provider value={store}><App /></Store.Provider>)\n}\n\nexport const _split = (string) => {\n  return string.split(/(?=[A-Z])/).join(' ')\n}\n\nReactDOM.render(<WrappedApp />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}