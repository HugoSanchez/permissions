{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","TokenSelector.js","PMDisplay.js","App.js","rootReducer.js","combineReducers.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Text","Typography","Title","Option","Select","TokenSelector","tokenSelectOpts","onChange","Fragment","level","style","paddingTop","paddingBottom","width","autoFocus","showSearch","marginBottom","placeholder","optionFilterProp","index","filterOption","input","option","props","children","toLowerCase","indexOf","map","label","value","key","Column","Table","Item","Form","formItemLayout","labelCol","xs","span","sm","wrapperCol","rolesMap","PMDisplay","records","revokeRole","assignRole","roles","address","role","useForm","getFieldDecorator","validateFields","resetFields","errors","values","useState","formVisible","setFormVisible","rolesOpts","handleSubmit","a","force","then","console","log","error","display","flexDirection","type","onClick","alignSelf","zIndex","title","okText","closable","visible","footer","name","rules","required","validator","rule","callback","web3Utils","isAddress","size","dataSource","rowKey","dataIndex","render","text","_split","record","theme","Content","Layout","Header","Sider","PERMISSIONS_FEATURE","networkConfigs","1","polymathRegistryAddress","42","15","Network","networkId","marginRight","marginLeft","0","User","walletAddress","Features","features","pmEnabled","column","status","Object","feat","asyncAction","dispatch","func","msg","rets","message","App","useContext","Store","state","AppReducer","sdk","loading","loadingMessage","tokens","tokenIndex","availableRoles","token","enable","feature","queue","run","disable","useEffect","browserUtils","getNetworkId","getCurrentAddress","includes","config","Polymath","connect","init","getSecurityToken","symbol","length","getTokens","getStatus","featuresStatus","permissions","getAvailableRoles","getFeaturesStatus","getAllDelegates","delegates","reduce","acc","delegate","i","concat","delegateAddress","getDelegates","spinning","tip","backgroundColor","justifyContent","alignItems","padding","showIcon","orientation","rootReducer","reducers","action","hasChanged","nextState","result","combineReducers","undefined","Boolean","window","location","hostname","match","initialState","createContext","string","split","join","ReactDOM","store","useReducer","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3769a222.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1002;","import React from 'react'\nimport { Select, Typography } from 'antd'\n\nconst { Text, Title } = Typography\nconst { Option } = Select\n\nexport default function TokenSelector({tokenSelectOpts, onChange}) {\n  return (\n    <React.Fragment>\n      <Title level={3}>Please Select a Token</Title>\n      <Text style={{\n        paddingTop: 20,\n        paddingBottom: 20,\n        width: '100%'\n      }}>\n        Once you select a token, you will be able to manage administrators and operators of various Security Token features\n      </Text>\n      <Select\n        autoFocus\n        showSearch\n        style={{\n          width: '100%',\n          marginBottom: 40\n        }}\n        placeholder=\"Select a token\"\n        optionFilterProp=\"children\"\n        onChange={(index) => onChange(index)}\n        filterOption={(input, option) =>\n          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n      >\n        {tokenSelectOpts.map(({label, value}) =>\n          <Option key={value} value={value}>{label}</Option>)}\n      </Select>\n    </React.Fragment>\n  )\n}","import React, {Fragment, useState} from 'react'\nimport { Table, Typography, Button, Icon, Form, Input, Modal, Spin, Select } from 'antd'\nimport useForm from 'rc-form-hooks'\nimport { _split } from './index'\nimport { utils as web3Utils } from 'web3'\n\nconst { Column } = Table\nconst { Text } = Typography\nconst { Item } = Form\nconst { Option } = Select\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n}\nconst rolesMap = {\n  'StoOperator': 'STO Operator',\n  'StoAdministrator': 'STO Administrator',\n  'Erc20DividendsAdministrator': 'ERC20 Dividends Administrator',\n  'Erc20DividendsOperator': 'ERC20 Dividends Operator',\n  'PermissionsOperator': 'Permissions Operator',\n  'ShareholdersOperator': 'Shareholders Operator',\n  'PermissionsAdministrator': 'Permissions Administrator',\n  'ShareholdersAdministrator' : 'Shareholders Administrator'\n}\n\nexport default function PMDisplay({\n  records,\n  revokeRole,\n  assignRole,\n  roles\n}) {\n  records = records.map(({address, role}) => ({\n    key: address,\n    address: address,\n    role\n  }))\n  const { getFieldDecorator, validateFields, errors, values, resetFields } = useForm()\n  const [formVisible, setFormVisible] = useState(false)\n\n  const rolesOpts = roles.map(role => ({\n    value: role,\n    label: rolesMap[role]\n  }))\n  const handleSubmit = async () => {\n    const fields = ['address', 'role']\n    validateFields(fields, { force: true })\n      .then(async (values) => {\n        console.log(values)\n\n        try {\n          await assignRole(values.address, values.role)\n          resetFields()\n        }\n        catch (error) {\n          console.error(error)\n        }\n        // Close form\n        setFormVisible(false)\n      })\n  }\n\n  return (\n    <div style={{display: 'flex', flexDirection: 'column'}}>\n      <Button\n        type=\"primary\"\n        onClick={() => setFormVisible(true)}\n        style={{alignSelf: 'flex-end', marginBottom: 20}}>Assign a role</Button>\n      <Modal\n        zIndex={0}\n        title={'Assign a role'}\n        okText=\"Save\"\n        closable={false}\n        visible={formVisible}\n        footer={null}\n      >\n        <Form {...formItemLayout}>\n          <Item name=\"address\" label=\"Address\">\n            {getFieldDecorator('address', {\n              rules: [\n                { required: true  },\n                {\n                  validator: (rule, value, callback) => {\n                    if (!web3Utils.isAddress(value)) {\n                      callback('Address is invalid')\n                      return\n                    }\n                    callback()\n                    return\n                  }\n                }\n              ],\n            })(<Input />)}\n          </Item>\n          <Item name=\"role\" label=\"Role\">\n            {getFieldDecorator('role', {rules: [\n              { required: true  }\n            ]})(<Select>\n              {rolesOpts.map(({value, label}) =>\n                <Option key={label} value={value}>{label}</Option>)}\n            </Select>)}\n          </Item>\n          <Item name=\"details\" label=\"Details\">\n            {getFieldDecorator('details')(<Input />)}\n          </Item>\n          <Item>\n            <Button onClick={() => setFormVisible(false)}>Cancel</Button>\n            <Button type=\"primary\" onClick={handleSubmit}>Save</Button>\n          </Item>\n        </Form>\n      </Modal>\n      <Table style={{zIndex: 0}} size=\"middle\" dataSource={records} rowKey={(address, role) => `${address}-${role}`}>\n        <Column\n          title='Address'\n          dataIndex='address'\n          key='address'\n          render={(text) => <Text>{text}</Text>}\n        />\n        <Column\n          title='Role'\n          dataIndex='role'\n          key='role'\n          render={(role) => <Text>{_split(role)}</Text>}\n        />\n        <Column\n          title='Actions'\n          render={(text, record) => {\n            return (\n              <Fragment>\n                <Button onClick={() => revokeRole(record.address, record.role)}>\n                  <Icon type=\"delete\" theme=\"filled\" />\n                </Button>\n              </Fragment>\n            )\n          }}/>\n      </Table>\n    </div>\n  )\n}","import React, { useContext, useEffect, Fragment } from 'react'\nimport { Store } from './index'\nimport { Polymath, browserUtils } from '@polymathnetwork/sdk'\nimport { Layout, Spin, Icon, Typography, Alert, Button, Descriptions, Badge, Divider } from 'antd'\nimport TokenSelector from './TokenSelector'\nimport PMDisplay from './PMDisplay'\nimport { _split } from './index'\nconst { Content, Header, Sider } = Layout\nconst { Text } = Typography\n\nconst PERMISSIONS_FEATURE = 'Permissions'\n\nconst networkConfigs = {\n  1: {\n    polymathRegistryAddress: '0xdfabf3e4793cd30affb47ab6fa4cf4eef26bbc27'\n  },\n  42: {\n    polymathRegistryAddress: '0x5b215a7d39ee305ad28da29bf2f0425c6c2a00b3'\n  },\n  15: {\n    polymathRegistryAddress: '0x9FBDa871d559710256a2502A2517b794B482Db40'\n  }\n}\n\nexport const reducer = (state, action) => {\n  console.log('ACTION', action)\n  switch (action.type) {\n  case 'ASYNC_START':\n    return {\n      ...state,\n      loading: true,\n      loadingMessage: action.msg,\n      error: undefined,\n    }\n  case 'ASYNC_COMPLETE':\n    const { type, ...payload } = action\n    return {\n      ...state,\n      ...payload,\n      loading: false,\n      loadingMessage: '',\n      error: undefined\n    }\n  case 'ERROR':\n  case 'ASYNC_ERROR':\n    const { error } = action\n    return {\n      ...state,\n      loading: false,\n      loadingMessage: '',\n      error,\n    }\n  case 'TOKEN_SELECTED':\n    const { tokenIndex } = action\n    return {\n      ...state,\n      tokenIndex,\n      delegates: undefined,\n      records: undefined,\n      pmEnabled: undefined,\n      error: undefined,\n      features: undefined,\n    }\n  default:\n    throw new Error(`Unrecognized action type: ${action.type}`)\n  }\n}\n\nfunction Network({networkId}) {\n  const networks = {\n    0: 'Disconnected',\n    1: 'Mainnet',\n    42: 'Kovan'\n  }\n  return (\n    <Fragment>\n      <Icon type=\"global\" style={{\n        marginRight: 10,\n        marginLeft: 20\n      }} />\n      <Text>{networks[networkId]}</Text>\n    </Fragment>\n  )\n}\n\nfunction User({walletAddress}) {\n  if (walletAddress)\n    return (\n      <Fragment>\n        <Icon type=\"user\" style={{\n          marginRight: 5,\n          marginLeft: 10\n        }}/>\n        <Text>{walletAddress}</Text>\n      </Fragment>\n    )\n  return null\n}\n\nfunction Features({features, pmEnabled, onClick}) {\n  return (\n    <Descriptions column={4} style={{marginBottom: 50}}>\n      <Descriptions.Item key='Permissions' label='Permissions'>\n        { pmEnabled\n          ? <Badge status='success' text='enabled' />\n          : <Button type=\"primary\" onClick={onClick}>Enable</Button> }\n      </Descriptions.Item>\n      }\n      {Object.keys(features).map(feat => {\n        return (<Descriptions.Item key={feat} label={_split(feat)}>\n          <Badge status={features[feat] ? 'success' : 'error'} text={features[feat] ? 'enabled' : 'disabled'} />\n        </Descriptions.Item>\n        )}\n      )}\n    </Descriptions> )\n}\n\nasync function asyncAction(dispatch, func, msg = '') {\n  try {\n    dispatch({type: 'ASYNC_START', msg})\n    const rets = await func()\n    dispatch({type: 'ASYNC_COMPLETE', ...rets})\n  }\n  catch (error) {\n    dispatch({type: 'ASYNC_ERROR', error: error.message})\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useContext(Store)\n  const {\n    sdk,\n    loading,\n    loadingMessage,\n    walletAddress,\n    error,\n    networkId,\n    tokens,\n    tokenIndex,\n    pmEnabled,\n    records,\n    features,\n    availableRoles\n  } = state.AppReducer\n  const token = tokens[tokenIndex]\n\n  // Initialize the SDK.\n  useEffect(() => {\n    async function init() {\n      const networkId = await browserUtils.getNetworkId()\n      const walletAddress = await browserUtils.getCurrentAddress()\n      if (![-1, 1, 42].includes(networkId)) {\n        dispatch({\n          type: 'ERROR',\n          error: 'Please switch to either Main or Kovan network'\n        })\n        return\n      }\n\n      const config = networkConfigs[networkId]\n      const sdk = new Polymath()\n      await sdk.connect(config)\n      return {\n        networkId,\n        sdk,\n        walletAddress\n      }\n    }\n    if (!sdk) {\n      asyncAction(dispatch, () => init(), 'Initializing Polymath SDK')\n    }\n  }, [dispatch, sdk])\n\n  // Fetch tokens\n  useEffect(() => {\n    async function getTokens(sdk, walletAddress) {\n      const tokens = [await sdk.getSecurityToken({ symbol: 'RN' })]\n      return {\n        tokens\n      }\n    }\n    if (sdk && walletAddress && tokens.length === 0) {\n      asyncAction(dispatch, () => getTokens(sdk, walletAddress), 'Loading tokens')\n    }\n  }, [walletAddress, sdk, dispatch, tokens])\n\n  // Load features status / available roles\n  useEffect(() => {\n    async function getFeaturesStatus() {\n      const featuresStatus = await token.features.getStatus()\n      let availableRoles = []\n      const pmEnabled = featuresStatus[PERMISSIONS_FEATURE]\n      delete featuresStatus[PERMISSIONS_FEATURE]\n      if (pmEnabled) {\n        availableRoles = await token.permissions.getAvailableRoles()\n      }\n      return {\n        availableRoles, features: featuresStatus, pmEnabled\n      }\n    }\n    if (token && !features) {\n      asyncAction(dispatch, () => getFeaturesStatus(), 'Loading features status')\n    }\n  }, [dispatch, features, token])\n\n  // Load delegates\n  useEffect(() => {\n    async function getDelegates() {\n      const delegates = await token.permissions.getAllDelegates()\n      const records = delegates.reduce((acc, delegate, i) => {\n        return acc.concat(delegate.roles.map(role => ({\n          address: delegates[i].delegateAddress,\n          role\n        })))\n      }, [])\n      return {\n        delegates,\n        records\n      }\n    }\n    if (token && pmEnabled) {\n      asyncAction(dispatch, () => getDelegates(), 'Loading delegates')\n    }\n  }, [pmEnabled, dispatch, token])\n\n  const selectToken = (tokenIndex) => {\n    dispatch({type: 'TOKEN_SELECTED', tokenIndex})\n  }\n\n  async function togglePM(enable) {\n    try {\n      dispatch({type: 'ASYNC_START', msg: 'Toggle role management'})\n      if (enable) {\n      // Enable module\n        const queue = await token.features.enable({feature: PERMISSIONS_FEATURE})\n        const result = await queue.run()\n      } else {\n      // Disable module\n        const queue = await token.features.disable({feature: PERMISSIONS_FEATURE})\n        const result = await queue.run()\n      }\n      dispatch({type: 'ASYNC_COMPLETE', pmEnabled: !enable})\n      dispatch({type: 'TOKEN_SELECTED', tokenIndex})\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: 'ASYNC_ERROR',\n        error: error.message\n      })\n    }\n  }\n\n  const revokeRole = async (address, role) => {\n    try {\n      dispatch({type: 'ASYNC_START', msg: `Revoking ${role} role from ${address}`})\n      const queue = await token.permissions.revokeRole({ delegateAddress: address, role })\n      const res = await queue.run()\n      dispatch({type: 'ASYNC_COMPLETE'})\n      dispatch({type: 'TOKEN_SELECTED', tokenIndex})\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: 'ASYNC_ERROR',\n        error: error.message\n      })\n    }\n  }\n\n  const assignRole = async (address, role) => {\n    try {\n      dispatch({type: 'ASYNC_START', msg: `Assigning ${role} role to ${address}`})\n      const queue = await token.permissions.assignRole({ delegateAddress: address, role })\n      dispatch({type: 'ASYNC_COMPLETE'})\n      dispatch({type: 'TOKEN_SELECTED', tokenIndex})\n    } catch (error) {\n      console.error(error)\n      dispatch({\n        type: 'ASYNC_ERROR',\n        error: error.message\n      })\n    }\n  }\n\n  return (\n    <div>\n      <Spin spinning={loading} tip={loadingMessage} size=\"large\">\n        <Layout>\n          <Header style={{\n            backgroundColor: 'white',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            alignItems: 'center'\n          }}>\n            <Network networkId={networkId} />\n            <User walletAddress={walletAddress} />\n          </Header>\n          <Layout>\n            <Sider width={350}\n              style={{\n                padding: 50,\n                backgroundColor: '#FAFDFF'\n              }}\n            >\n              { walletAddress && tokens &&\n                <div style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  width: 250,\n                  justifyContent: 'flex-start'\n                }}>\n                  <TokenSelector tokenSelectOpts={tokens.map((token, i) => ({label: token.symbol, value: i}))} onChange={selectToken} />\n                </div>\n              }\n            </Sider>\n            <Content style={{\n              padding: 50,\n              backgroundColor: '#FAFDFF'\n            }}>\n              {error && <Alert\n                message={error}\n                type=\"error\"\n                closable\n                showIcon\n              />}\n              { token && features &&\n                <Fragment>\n                  <Divider orientation=\"left\">Token features</Divider>\n                  <Features features={features} pmEnabled={pmEnabled} onClick={togglePM} />\n                </Fragment> }\n              { token && availableRoles && records && <React.Fragment>\n                <Divider orientation=\"left\">Delegates (administrators and operators)</Divider>\n\n                <PMDisplay\n                  records={records}\n                  roles={availableRoles}\n                  revokeRole={revokeRole}\n                  assignRole={assignRole}/>\n              </React.Fragment> }\n            </Content>\n          </Layout>\n        </Layout>\n      </Spin>\n    </div>\n  )\n}\n\nexport default App\n","import combineReducers from './combineReducers'\nimport { reducer as AppReducer } from './App'\nconst rootReducer = combineReducers({AppReducer})\n\nexport default rootReducer","/**\n * @see https://codesandbox.io/s/rm7587n34m?from-embed\n *\n * A size-optimized refactor of Redux's combineReducers.\n * All safeguards removed. Use at your own risk.\n * https://github.com/reduxjs/redux/blob/master/src/combineReducers.js\n */\n\nconst combineReducers = reducers => (state, action) => {\n  let hasChanged\n  const nextState = Object.keys(reducers).reduce((result, key) => {\n    result[key] = reducers[key](state[key], action)\n    hasChanged = hasChanged || result[key] !== state[key]\n    return result\n  }, {})\n  return hasChanged ? nextState : state\n}\n\nexport default combineReducers\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {createContext, useReducer} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport rootReducer from './rootReducer'\nimport * as serviceWorker from './serviceWorker'\n\nconst initialState = {\n  AppReducer: {\n    sdk: undefined,\n    loading: false,\n    loadingMessage: '',\n    error: undefined,\n    networkId: -1,\n    walletAddress: '',\n    tokens: [],\n    tokenIndex: undefined,\n    pmEnabled: undefined,\n    delegates: undefined,\n    features: undefined\n  }\n}\n\nexport const Store = createContext()\nconst WrappedApp = () => {\n  const store = useReducer(rootReducer, initialState)\n  return (<Store.Provider value={store}><App /></Store.Provider>)\n}\n\nexport const _split = (string) => {\n  return string.split(/(?=[A-Z])/).join(' ')\n}\n\nReactDOM.render(<WrappedApp />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}